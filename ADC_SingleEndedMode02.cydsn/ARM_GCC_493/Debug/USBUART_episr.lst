ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBUART_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBUART_EP_3_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBUART_EP_3_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBUART_EP_3_ISR, %function
  24              	USBUART_EP_3_ISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\USBUART_episr.c"
   1:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART_episr.c **** * \file USBUART_episr.c
   3:Generated_Source\PSoC5/USBUART_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBUART_episr.c **** *
   5:Generated_Source\PSoC5/USBUART_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBUART_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBUART_episr.c **** *
   8:Generated_Source\PSoC5/USBUART_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBUART_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBUART_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBUART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBUART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBUART_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBUART_episr.c **** 
  16:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_pvt.h"
  17:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_cydmac.h"
  18:Generated_Source\PSoC5/USBUART_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBUART_episr.c **** 
  20:Generated_Source\PSoC5/USBUART_episr.c **** 
  21:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBUART_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBUART_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBUART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBUART_episr.c **** 
  26:Generated_Source\PSoC5/USBUART_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBUART_episr.c **** 
  28:Generated_Source\PSoC5/USBUART_episr.c **** 
  29:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBUART_episr.c ****     /******************************************************************************
  31:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_1_ISR
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 2


  32:Generated_Source\PSoC5/USBUART_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBUART_episr.c ****     *
  34:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBUART_episr.c ****     *
  36:Generated_Source\PSoC5/USBUART_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_1_ISR)
  38:Generated_Source\PSoC5/USBUART_episr.c ****     {
  39:Generated_Source\PSoC5/USBUART_episr.c **** 
  40:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBUART_episr.c **** 
  44:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBUART_episr.c **** 
  46:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBUART_episr.c **** 
  48:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBUART_episr.c ****         {
  51:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBUART_episr.c ****     
  55:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP1_INTR);
  56:Generated_Source\PSoC5/USBUART_episr.c ****             
  57:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBUART_episr.c ****         */
  61:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP1].addr & USBUART_DIR_IN))
  63:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBUART_episr.c ****         {
  65:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP1].epCr0;
  67:Generated_Source\PSoC5/USBUART_episr.c ****             
  68:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP1) != USBUART_EP_TYPE_ISOC)
  70:Generated_Source\PSoC5/USBUART_episr.c ****             {
  71:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP1].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  72:Generated_Source\PSoC5/USBUART_episr.c ****             }
  73:Generated_Source\PSoC5/USBUART_episr.c **** 
  74:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBUART_episr.c ****             */
  80:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP1].apiEpState = USBUART_EVENT_PENDING;
  81:Generated_Source\PSoC5/USBUART_episr.c ****         }
  82:Generated_Source\PSoC5/USBUART_episr.c **** 
  83:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP1)
  87:Generated_Source\PSoC5/USBUART_episr.c ****             {
  88:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 3


  89:Generated_Source\PSoC5/USBUART_episr.c ****             }
  90:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBUART_episr.c ****     
  93:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBUART_episr.c **** 
  95:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBUART_episr.c **** 
  97:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBUART_episr.c **** 
 101:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBUART_episr.c ****         
 104:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBUART_episr.c ****         }
 106:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBUART_episr.c ****     }
 108:Generated_Source\PSoC5/USBUART_episr.c **** 
 109:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBUART_episr.c **** 
 111:Generated_Source\PSoC5/USBUART_episr.c **** 
 112:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_2_ISR
 115:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBUART_episr.c ****     *
 117:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBUART_episr.c ****     *
 119:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_2_ISR)
 121:Generated_Source\PSoC5/USBUART_episr.c ****     {
 122:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBUART_episr.c **** 
 126:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBUART_episr.c **** 
 128:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBUART_episr.c **** 
 130:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBUART_episr.c ****         {
 133:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBUART_episr.c **** 
 137:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP2_INTR);
 138:Generated_Source\PSoC5/USBUART_episr.c **** 
 139:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBUART_episr.c ****         */
 143:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP2].addr & USBUART_DIR_IN))
 145:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 4


 146:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 147:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP2].epCr0;
 149:Generated_Source\PSoC5/USBUART_episr.c ****             
 150:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP2) != USBUART_EP_TYPE_ISOC)
 152:Generated_Source\PSoC5/USBUART_episr.c ****             {
 153:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP2].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 154:Generated_Source\PSoC5/USBUART_episr.c ****             }
 155:Generated_Source\PSoC5/USBUART_episr.c **** 
 156:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBUART_episr.c ****             */
 162:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP2].apiEpState = USBUART_EVENT_PENDING;
 163:Generated_Source\PSoC5/USBUART_episr.c ****         }
 164:Generated_Source\PSoC5/USBUART_episr.c **** 
 165:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP2)
 169:Generated_Source\PSoC5/USBUART_episr.c ****             {
 170:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBUART_episr.c ****             }
 172:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBUART_episr.c ****     
 175:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBUART_episr.c **** 
 177:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBUART_episr.c **** 
 179:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBUART_episr.c **** 
 183:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBUART_episr.c ****         
 186:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBUART_episr.c ****         }
 188:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBUART_episr.c ****     }
 190:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBUART_episr.c **** 
 192:Generated_Source\PSoC5/USBUART_episr.c **** 
 193:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_3_ISR
 196:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBUART_episr.c ****     *
 198:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBUART_episr.c ****     *
 200:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_3_ISR)
 202:Generated_Source\PSoC5/USBUART_episr.c ****     {
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 5


  27              		.loc 1 202 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
 203:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBUART_episr.c **** 
 207:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBUART_episr.c **** 
 209:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBUART_episr.c **** 
 211:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBUART_episr.c ****         {
 214:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBUART_episr.c **** 
 218:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP3_INTR);    
  37              		.loc 1 218 0
  38 0004 104B     		ldr	r3, .L3
  39 0006 0422     		movs	r2, #4
  40 0008 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/USBUART_episr.c **** 
 220:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBUART_episr.c ****         */
 224:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP3].addr & USBUART_DIR_IN))
 226:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 228:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP3].epCr0;
  41              		.loc 1 229 0
  42 000a 104B     		ldr	r3, .L3+4
  43 000c 93F83230 		ldrb	r3, [r3, #50]
 230:Generated_Source\PSoC5/USBUART_episr.c **** 
 231:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP3) != USBUART_EP_TYPE_ISOC)
  44              		.loc 1 232 0
  45 0010 0F4B     		ldr	r3, .L3+8
  46 0012 93F82430 		ldrb	r3, [r3, #36]
  47 0016 DBB2     		uxtb	r3, r3
  48 0018 03F00303 		and	r3, r3, #3
  49 001c 012B     		cmp	r3, #1
  50 001e 0AD0     		beq	.L2
 233:Generated_Source\PSoC5/USBUART_episr.c ****             {
 234:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP3].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  51              		.loc 1 234 0
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 6


  52 0020 0B4B     		ldr	r3, .L3+8
  53 0022 93F82730 		ldrb	r3, [r3, #39]
  54 0026 DBB2     		uxtb	r3, r3
  55 0028 83F07F03 		eor	r3, r3, #127
  56 002c DB43     		mvns	r3, r3
  57 002e DAB2     		uxtb	r2, r3
  58 0030 074B     		ldr	r3, .L3+8
  59 0032 83F82720 		strb	r2, [r3, #39]
  60              	.L2:
 235:Generated_Source\PSoC5/USBUART_episr.c ****             }
 236:Generated_Source\PSoC5/USBUART_episr.c **** 
 237:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBUART_episr.c ****             */
 243:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP3].apiEpState = USBUART_EVENT_PENDING;
  61              		.loc 1 243 0
  62 0036 064B     		ldr	r3, .L3+8
  63 0038 0122     		movs	r2, #1
  64 003a 83F82520 		strb	r2, [r3, #37]
 244:Generated_Source\PSoC5/USBUART_episr.c ****         }
 245:Generated_Source\PSoC5/USBUART_episr.c **** 
 246:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP3)
 250:Generated_Source\PSoC5/USBUART_episr.c ****             {
 251:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBUART_episr.c ****             }
 253:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBUART_episr.c **** 
 256:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBUART_episr.c **** 
 258:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBUART_episr.c **** 
 260:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBUART_episr.c **** 
 264:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBUART_episr.c ****         
 267:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBUART_episr.c ****         }
 269:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBUART_episr.c ****     }
  65              		.loc 1 270 0
  66 003e BD46     		mov	sp, r7
  67              		.cfi_def_cfa_register 13
  68              		@ sp needed
  69 0040 5DF8047B 		ldr	r7, [sp], #4
  70              		.cfi_restore 7
  71              		.cfi_def_cfa_offset 0
  72 0044 7047     		bx	lr
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 7


  73              	.L4:
  74 0046 00BF     		.align	2
  75              	.L3:
  76 0048 0B600040 		.word	1073766411
  77 004c FC5F0040 		.word	1073766396
  78 0050 00000000 		.word	USBUART_EP
  79              		.cfi_endproc
  80              	.LFE0:
  81              		.size	USBUART_EP_3_ISR, .-USBUART_EP_3_ISR
  82              		.section	.text.USBUART_EP_4_ISR,"ax",%progbits
  83              		.align	2
  84              		.global	USBUART_EP_4_ISR
  85              		.thumb
  86              		.thumb_func
  87              		.type	USBUART_EP_4_ISR, %function
  88              	USBUART_EP_4_ISR:
  89              	.LFB1:
 271:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBUART_episr.c **** 
 273:Generated_Source\PSoC5/USBUART_episr.c **** 
 274:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_4_ISR
 277:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBUART_episr.c ****     *
 279:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBUART_episr.c ****     *
 281:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_4_ISR)
 283:Generated_Source\PSoC5/USBUART_episr.c ****     {
  90              		.loc 1 283 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95 0000 80B4     		push	{r7}
  96              		.cfi_def_cfa_offset 4
  97              		.cfi_offset 7, -4
  98 0002 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
 284:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBUART_episr.c **** 
 288:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBUART_episr.c **** 
 290:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBUART_episr.c **** 
 292:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBUART_episr.c ****         {
 295:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBUART_episr.c **** 
 299:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP4_INTR);
 100              		.loc 1 299 0
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 8


 101 0004 104B     		ldr	r3, .L7
 102 0006 0822     		movs	r2, #8
 103 0008 1A70     		strb	r2, [r3]
 300:Generated_Source\PSoC5/USBUART_episr.c ****         
 301:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBUART_episr.c ****         */
 305:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP4].addr & USBUART_DIR_IN))
 307:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBUART_episr.c ****         {
 309:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP4].epCr0;
 104              		.loc 1 310 0
 105 000a 104B     		ldr	r3, .L7+4
 106 000c 93F84230 		ldrb	r3, [r3, #66]
 311:Generated_Source\PSoC5/USBUART_episr.c **** 
 312:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP4) != USBUART_EP_TYPE_ISOC)
 107              		.loc 1 313 0
 108 0010 0F4B     		ldr	r3, .L7+8
 109 0012 93F83030 		ldrb	r3, [r3, #48]
 110 0016 DBB2     		uxtb	r3, r3
 111 0018 03F00303 		and	r3, r3, #3
 112 001c 012B     		cmp	r3, #1
 113 001e 0AD0     		beq	.L6
 314:Generated_Source\PSoC5/USBUART_episr.c ****             {
 315:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP4].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 114              		.loc 1 315 0
 115 0020 0B4B     		ldr	r3, .L7+8
 116 0022 93F83330 		ldrb	r3, [r3, #51]
 117 0026 DBB2     		uxtb	r3, r3
 118 0028 83F07F03 		eor	r3, r3, #127
 119 002c DB43     		mvns	r3, r3
 120 002e DAB2     		uxtb	r2, r3
 121 0030 074B     		ldr	r3, .L7+8
 122 0032 83F83320 		strb	r2, [r3, #51]
 123              	.L6:
 316:Generated_Source\PSoC5/USBUART_episr.c ****             }
 317:Generated_Source\PSoC5/USBUART_episr.c **** 
 318:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBUART_episr.c ****             */
 324:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP4].apiEpState = USBUART_EVENT_PENDING;
 124              		.loc 1 324 0
 125 0036 064B     		ldr	r3, .L7+8
 126 0038 0122     		movs	r2, #1
 127 003a 83F83120 		strb	r2, [r3, #49]
 325:Generated_Source\PSoC5/USBUART_episr.c ****         }
 326:Generated_Source\PSoC5/USBUART_episr.c **** 
 327:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 9


 330:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP4)
 331:Generated_Source\PSoC5/USBUART_episr.c ****             {
 332:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBUART_episr.c ****             }
 334:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBUART_episr.c **** 
 337:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBUART_episr.c **** 
 339:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBUART_episr.c **** 
 341:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBUART_episr.c **** 
 345:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBUART_episr.c ****         
 348:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBUART_episr.c ****         }
 350:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBUART_episr.c ****     }
 128              		.loc 1 351 0
 129 003e BD46     		mov	sp, r7
 130              		.cfi_def_cfa_register 13
 131              		@ sp needed
 132 0040 5DF8047B 		ldr	r7, [sp], #4
 133              		.cfi_restore 7
 134              		.cfi_def_cfa_offset 0
 135 0044 7047     		bx	lr
 136              	.L8:
 137 0046 00BF     		.align	2
 138              	.L7:
 139 0048 0B600040 		.word	1073766411
 140 004c FC5F0040 		.word	1073766396
 141 0050 00000000 		.word	USBUART_EP
 142              		.cfi_endproc
 143              	.LFE1:
 144              		.size	USBUART_EP_4_ISR, .-USBUART_EP_4_ISR
 145              		.section	.text.USBUART_SOF_ISR,"ax",%progbits
 146              		.align	2
 147              		.global	USBUART_SOF_ISR
 148              		.thumb
 149              		.thumb_func
 150              		.type	USBUART_SOF_ISR, %function
 151              	USBUART_SOF_ISR:
 152              	.LFB2:
 352:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBUART_episr.c **** 
 354:Generated_Source\PSoC5/USBUART_episr.c **** 
 355:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_5_ISR
 358:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBUART_episr.c ****     *
 360:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBUART_episr.c ****     *
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 10


 362:Generated_Source\PSoC5/USBUART_episr.c ****     *
 363:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_5_ISR)
 365:Generated_Source\PSoC5/USBUART_episr.c ****     {
 366:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBUART_episr.c **** 
 370:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBUART_episr.c **** 
 372:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBUART_episr.c **** 
 374:Generated_Source\PSoC5/USBUART_episr.c ****     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBUART_episr.c ****                  USBUART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBUART_episr.c ****         {
 377:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBUART_episr.c **** 
 381:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBUART_episr.c ****     
 383:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBUART_episr.c ****         */
 387:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP5].addr & USBUART_DIR_IN))
 389:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 391:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP5].epCr0;
 393:Generated_Source\PSoC5/USBUART_episr.c **** 
 394:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP5) != USBUART_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBUART_episr.c ****             {
 397:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP5].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBUART_episr.c ****             }
 399:Generated_Source\PSoC5/USBUART_episr.c **** 
 400:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBUART_episr.c ****             */
 406:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP5].apiEpState = USBUART_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBUART_episr.c ****         }
 408:Generated_Source\PSoC5/USBUART_episr.c **** 
 409:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP5)
 413:Generated_Source\PSoC5/USBUART_episr.c ****             {
 414:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBUART_episr.c ****             }
 416:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 11


 419:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBUART_episr.c **** 
 421:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBUART_episr.c **** 
 423:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBUART_episr.c **** 
 427:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBUART_episr.c ****         
 430:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBUART_episr.c ****         }
 432:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBUART_episr.c ****     }
 434:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBUART_episr.c **** 
 436:Generated_Source\PSoC5/USBUART_episr.c **** 
 437:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_6_ISR
 440:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBUART_episr.c ****     *
 442:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBUART_episr.c ****     *
 444:Generated_Source\PSoC5/USBUART_episr.c ****     *
 445:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_6_ISR)
 447:Generated_Source\PSoC5/USBUART_episr.c ****     {
 448:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBUART_episr.c **** 
 452:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBUART_episr.c **** 
 454:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBUART_episr.c **** 
 456:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBUART_episr.c ****         {
 459:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBUART_episr.c **** 
 463:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBUART_episr.c ****         
 465:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBUART_episr.c ****         */
 469:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP6].addr & USBUART_DIR_IN))
 471:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBUART_episr.c ****         {
 473:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP6].epCr0;
 475:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 12


 476:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP6) != USBUART_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBUART_episr.c ****             {
 479:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP6].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBUART_episr.c ****             }
 481:Generated_Source\PSoC5/USBUART_episr.c ****             
 482:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBUART_episr.c ****             */
 488:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP6].apiEpState = USBUART_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBUART_episr.c ****         }
 490:Generated_Source\PSoC5/USBUART_episr.c **** 
 491:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP6)
 495:Generated_Source\PSoC5/USBUART_episr.c ****             {
 496:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBUART_episr.c ****             }
 498:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBUART_episr.c **** 
 501:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBUART_episr.c **** 
 503:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBUART_episr.c **** 
 505:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBUART_episr.c **** 
 509:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBUART_episr.c ****         
 512:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBUART_episr.c ****         }
 514:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBUART_episr.c ****     }
 516:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBUART_episr.c **** 
 518:Generated_Source\PSoC5/USBUART_episr.c **** 
 519:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_7_ISR
 522:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBUART_episr.c ****     *
 524:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBUART_episr.c ****     *
 526:Generated_Source\PSoC5/USBUART_episr.c ****     *
 527:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_7_ISR)
 529:Generated_Source\PSoC5/USBUART_episr.c ****     {
 530:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_ENTRY_CALLBACK) */
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 13


 533:Generated_Source\PSoC5/USBUART_episr.c **** 
 534:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBUART_episr.c **** 
 536:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBUART_episr.c **** 
 538:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBUART_episr.c ****         {
 541:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBUART_episr.c ****     
 545:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBUART_episr.c ****         
 547:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBUART_episr.c ****         */
 551:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP7].addr & USBUART_DIR_IN))
 553:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBUART_episr.c ****         {           
 555:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP7].epCr0;
 557:Generated_Source\PSoC5/USBUART_episr.c **** 
 558:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP7) != USBUART_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBUART_episr.c ****             {
 561:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP7].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBUART_episr.c ****             }
 563:Generated_Source\PSoC5/USBUART_episr.c ****             
 564:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBUART_episr.c ****             */
 570:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP7].apiEpState = USBUART_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBUART_episr.c ****         }
 572:Generated_Source\PSoC5/USBUART_episr.c **** 
 573:Generated_Source\PSoC5/USBUART_episr.c **** 
 574:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP7)
 578:Generated_Source\PSoC5/USBUART_episr.c ****             {
 579:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBUART_episr.c ****             }
 581:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBUART_episr.c **** 
 584:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBUART_episr.c **** 
 586:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBUART_episr.c **** 
 588:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_ExitCallback();
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 14


 590:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBUART_episr.c **** 
 592:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBUART_episr.c ****         
 595:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBUART_episr.c ****         }
 597:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBUART_episr.c ****     }
 599:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBUART_episr.c **** 
 601:Generated_Source\PSoC5/USBUART_episr.c **** 
 602:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_8_ISR
 605:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBUART_episr.c ****     *
 607:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBUART_episr.c ****     *
 609:Generated_Source\PSoC5/USBUART_episr.c ****     *
 610:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_8_ISR)
 612:Generated_Source\PSoC5/USBUART_episr.c ****     {
 613:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBUART_episr.c **** 
 617:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBUART_episr.c **** 
 619:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBUART_episr.c **** 
 621:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBUART_episr.c ****         {
 624:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBUART_episr.c **** 
 628:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBUART_episr.c ****         
 630:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBUART_episr.c ****         */
 634:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP8].addr & USBUART_DIR_IN))
 636:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBUART_episr.c ****         {
 638:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP8].epCr0;
 640:Generated_Source\PSoC5/USBUART_episr.c **** 
 641:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP8) != USBUART_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBUART_episr.c ****             {
 644:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP8].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBUART_episr.c ****             }
 646:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 15


 647:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBUART_episr.c ****             */
 653:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP8].apiEpState = USBUART_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBUART_episr.c ****         }
 655:Generated_Source\PSoC5/USBUART_episr.c **** 
 656:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP8)
 660:Generated_Source\PSoC5/USBUART_episr.c ****             {
 661:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBUART_episr.c ****             }
 663:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBUART_episr.c **** 
 666:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBUART_episr.c **** 
 668:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBUART_episr.c **** 
 670:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBUART_episr.c **** 
 674:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBUART_episr.c ****         
 677:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBUART_episr.c ****         }
 679:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBUART_episr.c ****     }
 681:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBUART_episr.c **** 
 683:Generated_Source\PSoC5/USBUART_episr.c **** 
 684:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_SOF_ISR
 687:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBUART_episr.c ****     *
 689:Generated_Source\PSoC5/USBUART_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBUART_episr.c ****     *
 691:Generated_Source\PSoC5/USBUART_episr.c ****     *
 692:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_SOF_ISR)
 694:Generated_Source\PSoC5/USBUART_episr.c ****     {
 153              		.loc 1 694 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 80B4     		push	{r7}
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 7, -4
 161 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 16


 162              		.cfi_def_cfa_register 7
 695:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBUART_episr.c **** 
 699:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBUART_episr.c **** 
 701:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBUART_episr.c **** 
 703:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBUART_episr.c **** 
 705:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBUART_episr.c ****     }
 163              		.loc 1 708 0
 164 0004 BD46     		mov	sp, r7
 165              		.cfi_def_cfa_register 13
 166              		@ sp needed
 167 0006 5DF8047B 		ldr	r7, [sp], #4
 168              		.cfi_restore 7
 169              		.cfi_def_cfa_offset 0
 170 000a 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE2:
 173              		.size	USBUART_SOF_ISR, .-USBUART_SOF_ISR
 174              		.section	.text.USBUART_BUS_RESET_ISR,"ax",%progbits
 175              		.align	2
 176              		.global	USBUART_BUS_RESET_ISR
 177              		.thumb
 178              		.thumb_func
 179              		.type	USBUART_BUS_RESET_ISR, %function
 180              	USBUART_BUS_RESET_ISR:
 181              	.LFB3:
 709:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBUART_episr.c **** 
 711:Generated_Source\PSoC5/USBUART_episr.c **** 
 712:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBUART_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBUART_episr.c **** * Function Name: USBUART_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBUART_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBUART_episr.c **** *
 717:Generated_Source\PSoC5/USBUART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBUART_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBUART_episr.c **** *
 720:Generated_Source\PSoC5/USBUART_episr.c **** *
 721:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBUART_episr.c **** CY_ISR(USBUART_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBUART_episr.c **** {
 182              		.loc 1 723 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 80B5     		push	{r7, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 17


 190 0002 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 724:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBUART_episr.c **** 
 728:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBUART_episr.c **** 
 730:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBUART_episr.c **** 
 732:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBUART_episr.c **** 
 734:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ReInitComponent();
 192              		.loc 1 734 0
 193 0004 FFF7FEFF 		bl	USBUART_ReInitComponent
 735:Generated_Source\PSoC5/USBUART_episr.c **** 
 736:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_EXIT_CALLBACK
 737:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_ExitCallback();
 738:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:Generated_Source\PSoC5/USBUART_episr.c **** }
 194              		.loc 1 739 0
 195 0008 80BD     		pop	{r7, pc}
 196              		.cfi_endproc
 197              	.LFE3:
 198              		.size	USBUART_BUS_RESET_ISR, .-USBUART_BUS_RESET_ISR
 199 000a 00BF     		.text
 200              	.Letext0:
 201              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 202              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 203              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 204              		.section	.debug_info,"",%progbits
 205              	.Ldebug_info0:
 206 0000 1B020000 		.4byte	0x21b
 207 0004 0400     		.2byte	0x4
 208 0006 00000000 		.4byte	.Ldebug_abbrev0
 209 000a 04       		.byte	0x4
 210 000b 01       		.uleb128 0x1
 211 000c 40010000 		.4byte	.LASF36
 212 0010 01       		.byte	0x1
 213 0011 19010000 		.4byte	.LASF37
 214 0015 46000000 		.4byte	.LASF38
 215 0019 00000000 		.4byte	.Ldebug_ranges0+0
 216 001d 00000000 		.4byte	0
 217 0021 00000000 		.4byte	.Ldebug_line0
 218 0025 02       		.uleb128 0x2
 219 0026 01       		.byte	0x1
 220 0027 06       		.byte	0x6
 221 0028 B6020000 		.4byte	.LASF0
 222 002c 02       		.uleb128 0x2
 223 002d 01       		.byte	0x1
 224 002e 08       		.byte	0x8
 225 002f 0B010000 		.4byte	.LASF1
 226 0033 02       		.uleb128 0x2
 227 0034 02       		.byte	0x2
 228 0035 05       		.byte	0x5
 229 0036 66020000 		.4byte	.LASF2
 230 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 18


 231 003b 02       		.byte	0x2
 232 003c 07       		.byte	0x7
 233 003d 33000000 		.4byte	.LASF3
 234 0041 02       		.uleb128 0x2
 235 0042 04       		.byte	0x4
 236 0043 05       		.byte	0x5
 237 0044 96020000 		.4byte	.LASF4
 238 0048 02       		.uleb128 0x2
 239 0049 04       		.byte	0x4
 240 004a 07       		.byte	0x7
 241 004b D7000000 		.4byte	.LASF5
 242 004f 02       		.uleb128 0x2
 243 0050 08       		.byte	0x8
 244 0051 05       		.byte	0x5
 245 0052 48020000 		.4byte	.LASF6
 246 0056 02       		.uleb128 0x2
 247 0057 08       		.byte	0x8
 248 0058 07       		.byte	0x7
 249 0059 06020000 		.4byte	.LASF7
 250 005d 03       		.uleb128 0x3
 251 005e 04       		.byte	0x4
 252 005f 05       		.byte	0x5
 253 0060 696E7400 		.ascii	"int\000"
 254 0064 02       		.uleb128 0x2
 255 0065 04       		.byte	0x4
 256 0066 07       		.byte	0x7
 257 0067 F9010000 		.4byte	.LASF8
 258 006b 04       		.uleb128 0x4
 259 006c 86020000 		.4byte	.LASF9
 260 0070 02       		.byte	0x2
 261 0071 9201     		.2byte	0x192
 262 0073 2C000000 		.4byte	0x2c
 263 0077 04       		.uleb128 0x4
 264 0078 E7010000 		.4byte	.LASF10
 265 007c 02       		.byte	0x2
 266 007d 9301     		.2byte	0x193
 267 007f 3A000000 		.4byte	0x3a
 268 0083 02       		.uleb128 0x2
 269 0084 04       		.byte	0x4
 270 0085 04       		.byte	0x4
 271 0086 2D000000 		.4byte	.LASF11
 272 008a 02       		.uleb128 0x2
 273 008b 08       		.byte	0x8
 274 008c 04       		.byte	0x4
 275 008d CE010000 		.4byte	.LASF12
 276 0091 02       		.uleb128 0x2
 277 0092 01       		.byte	0x1
 278 0093 08       		.byte	0x8
 279 0094 56020000 		.4byte	.LASF13
 280 0098 04       		.uleb128 0x4
 281 0099 D2000000 		.4byte	.LASF14
 282 009d 02       		.byte	0x2
 283 009e 3C02     		.2byte	0x23c
 284 00a0 A4000000 		.4byte	0xa4
 285 00a4 05       		.uleb128 0x5
 286 00a5 6B000000 		.4byte	0x6b
 287 00a9 02       		.uleb128 0x2
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 19


 288 00aa 04       		.byte	0x4
 289 00ab 07       		.byte	0x7
 290 00ac 38020000 		.4byte	.LASF15
 291 00b0 06       		.uleb128 0x6
 292 00b1 0C       		.byte	0xc
 293 00b2 03       		.byte	0x3
 294 00b3 95       		.byte	0x95
 295 00b4 25010000 		.4byte	0x125
 296 00b8 07       		.uleb128 0x7
 297 00b9 D5010000 		.4byte	.LASF16
 298 00bd 03       		.byte	0x3
 299 00be 97       		.byte	0x97
 300 00bf 6B000000 		.4byte	0x6b
 301 00c3 00       		.byte	0
 302 00c4 07       		.uleb128 0x7
 303 00c5 EE010000 		.4byte	.LASF17
 304 00c9 03       		.byte	0x3
 305 00ca 98       		.byte	0x98
 306 00cb 6B000000 		.4byte	0x6b
 307 00cf 01       		.byte	0x1
 308 00d0 07       		.uleb128 0x7
 309 00d1 1D020000 		.4byte	.LASF18
 310 00d5 03       		.byte	0x3
 311 00d6 99       		.byte	0x99
 312 00d7 6B000000 		.4byte	0x6b
 313 00db 02       		.byte	0x2
 314 00dc 07       		.uleb128 0x7
 315 00dd BE000000 		.4byte	.LASF19
 316 00e1 03       		.byte	0x3
 317 00e2 9A       		.byte	0x9a
 318 00e3 6B000000 		.4byte	0x6b
 319 00e7 03       		.byte	0x3
 320 00e8 07       		.uleb128 0x7
 321 00e9 E9000000 		.4byte	.LASF20
 322 00ed 03       		.byte	0x3
 323 00ee 9B       		.byte	0x9b
 324 00ef 6B000000 		.4byte	0x6b
 325 00f3 04       		.byte	0x4
 326 00f4 07       		.uleb128 0x7
 327 00f5 41020000 		.4byte	.LASF21
 328 00f9 03       		.byte	0x3
 329 00fa 9C       		.byte	0x9c
 330 00fb 6B000000 		.4byte	0x6b
 331 00ff 05       		.byte	0x5
 332 0100 07       		.uleb128 0x7
 333 0101 DC010000 		.4byte	.LASF22
 334 0105 03       		.byte	0x3
 335 0106 9D       		.byte	0x9d
 336 0107 77000000 		.4byte	0x77
 337 010b 06       		.byte	0x6
 338 010c 07       		.uleb128 0x7
 339 010d 5B020000 		.4byte	.LASF23
 340 0111 03       		.byte	0x3
 341 0112 9E       		.byte	0x9e
 342 0113 77000000 		.4byte	0x77
 343 0117 08       		.byte	0x8
 344 0118 07       		.uleb128 0x7
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 20


 345 0119 8C020000 		.4byte	.LASF24
 346 011d 03       		.byte	0x3
 347 011e 9F       		.byte	0x9f
 348 011f 6B000000 		.4byte	0x6b
 349 0123 0A       		.byte	0xa
 350 0124 00       		.byte	0
 351 0125 08       		.uleb128 0x8
 352 0126 9F020000 		.4byte	.LASF25
 353 012a 03       		.byte	0x3
 354 012b A0       		.byte	0xa0
 355 012c B0000000 		.4byte	0xb0
 356 0130 06       		.uleb128 0x6
 357 0131 10       		.byte	0x10
 358 0132 03       		.byte	0x3
 359 0133 DC       		.byte	0xdc
 360 0134 69010000 		.4byte	0x169
 361 0138 07       		.uleb128 0x7
 362 0139 B0000000 		.4byte	.LASF26
 363 013d 03       		.byte	0x3
 364 013e DE       		.byte	0xde
 365 013f 6B000000 		.4byte	0x6b
 366 0143 00       		.byte	0
 367 0144 07       		.uleb128 0x7
 368 0145 B7000000 		.4byte	.LASF27
 369 0149 03       		.byte	0x3
 370 014a DF       		.byte	0xdf
 371 014b 6B000000 		.4byte	0x6b
 372 014f 01       		.byte	0x1
 373 0150 07       		.uleb128 0x7
 374 0151 27000000 		.4byte	.LASF28
 375 0155 03       		.byte	0x3
 376 0156 E0       		.byte	0xe0
 377 0157 6B000000 		.4byte	0x6b
 378 015b 02       		.byte	0x2
 379 015c 09       		.uleb128 0x9
 380 015d 67617000 		.ascii	"gap\000"
 381 0161 03       		.byte	0x3
 382 0162 E1       		.byte	0xe1
 383 0163 69010000 		.4byte	0x169
 384 0167 03       		.byte	0x3
 385 0168 00       		.byte	0
 386 0169 0A       		.uleb128 0xa
 387 016a 6B000000 		.4byte	0x6b
 388 016e 79010000 		.4byte	0x179
 389 0172 0B       		.uleb128 0xb
 390 0173 A9000000 		.4byte	0xa9
 391 0177 0C       		.byte	0xc
 392 0178 00       		.byte	0
 393 0179 08       		.uleb128 0x8
 394 017a 11000000 		.4byte	.LASF29
 395 017e 03       		.byte	0x3
 396 017f E2       		.byte	0xe2
 397 0180 30010000 		.4byte	0x130
 398 0184 0C       		.uleb128 0xc
 399 0185 90       		.byte	0x90
 400 0186 03       		.byte	0x3
 401 0187 1601     		.2byte	0x116
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 21


 402 0189 9B010000 		.4byte	0x19b
 403 018d 0D       		.uleb128 0xd
 404 018e EE000000 		.4byte	.LASF30
 405 0192 03       		.byte	0x3
 406 0193 1801     		.2byte	0x118
 407 0195 9B010000 		.4byte	0x19b
 408 0199 00       		.byte	0
 409 019a 00       		.byte	0
 410 019b 0A       		.uleb128 0xa
 411 019c 79010000 		.4byte	0x179
 412 01a0 AB010000 		.4byte	0x1ab
 413 01a4 0B       		.uleb128 0xb
 414 01a5 A9000000 		.4byte	0xa9
 415 01a9 08       		.byte	0x8
 416 01aa 00       		.byte	0
 417 01ab 04       		.uleb128 0x4
 418 01ac F4000000 		.4byte	.LASF31
 419 01b0 03       		.byte	0x3
 420 01b1 1901     		.2byte	0x119
 421 01b3 84010000 		.4byte	0x184
 422 01b7 0E       		.uleb128 0xe
 423 01b8 00000000 		.4byte	.LASF32
 424 01bc 01       		.byte	0x1
 425 01bd C9       		.byte	0xc9
 426 01be 00000000 		.4byte	.LFB0
 427 01c2 54000000 		.4byte	.LFE0-.LFB0
 428 01c6 01       		.uleb128 0x1
 429 01c7 9C       		.byte	0x9c
 430 01c8 0F       		.uleb128 0xf
 431 01c9 27020000 		.4byte	.LASF33
 432 01cd 01       		.byte	0x1
 433 01ce 1A01     		.2byte	0x11a
 434 01d0 00000000 		.4byte	.LFB1
 435 01d4 54000000 		.4byte	.LFE1-.LFB1
 436 01d8 01       		.uleb128 0x1
 437 01d9 9C       		.byte	0x9c
 438 01da 0F       		.uleb128 0xf
 439 01db A0000000 		.4byte	.LASF34
 440 01df 01       		.byte	0x1
 441 01e0 B502     		.2byte	0x2b5
 442 01e2 00000000 		.4byte	.LFB2
 443 01e6 0C000000 		.4byte	.LFE2-.LFB2
 444 01ea 01       		.uleb128 0x1
 445 01eb 9C       		.byte	0x9c
 446 01ec 10       		.uleb128 0x10
 447 01ed 70020000 		.4byte	.LASF35
 448 01f1 01       		.byte	0x1
 449 01f2 D202     		.2byte	0x2d2
 450 01f4 00000000 		.4byte	.LFB3
 451 01f8 0A000000 		.4byte	.LFE3-.LFB3
 452 01fc 01       		.uleb128 0x1
 453 01fd 9C       		.byte	0x9c
 454 01fe 0A       		.uleb128 0xa
 455 01ff 25010000 		.4byte	0x125
 456 0203 0E020000 		.4byte	0x20e
 457 0207 0B       		.uleb128 0xb
 458 0208 A9000000 		.4byte	0xa9
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 22


 459 020c 08       		.byte	0x8
 460 020d 00       		.byte	0
 461 020e 11       		.uleb128 0x11
 462 020f C7000000 		.4byte	.LASF39
 463 0213 04       		.byte	0x4
 464 0214 84       		.byte	0x84
 465 0215 19020000 		.4byte	0x219
 466 0219 05       		.uleb128 0x5
 467 021a FE010000 		.4byte	0x1fe
 468 021e 00       		.byte	0
 469              		.section	.debug_abbrev,"",%progbits
 470              	.Ldebug_abbrev0:
 471 0000 01       		.uleb128 0x1
 472 0001 11       		.uleb128 0x11
 473 0002 01       		.byte	0x1
 474 0003 25       		.uleb128 0x25
 475 0004 0E       		.uleb128 0xe
 476 0005 13       		.uleb128 0x13
 477 0006 0B       		.uleb128 0xb
 478 0007 03       		.uleb128 0x3
 479 0008 0E       		.uleb128 0xe
 480 0009 1B       		.uleb128 0x1b
 481 000a 0E       		.uleb128 0xe
 482 000b 55       		.uleb128 0x55
 483 000c 17       		.uleb128 0x17
 484 000d 11       		.uleb128 0x11
 485 000e 01       		.uleb128 0x1
 486 000f 10       		.uleb128 0x10
 487 0010 17       		.uleb128 0x17
 488 0011 00       		.byte	0
 489 0012 00       		.byte	0
 490 0013 02       		.uleb128 0x2
 491 0014 24       		.uleb128 0x24
 492 0015 00       		.byte	0
 493 0016 0B       		.uleb128 0xb
 494 0017 0B       		.uleb128 0xb
 495 0018 3E       		.uleb128 0x3e
 496 0019 0B       		.uleb128 0xb
 497 001a 03       		.uleb128 0x3
 498 001b 0E       		.uleb128 0xe
 499 001c 00       		.byte	0
 500 001d 00       		.byte	0
 501 001e 03       		.uleb128 0x3
 502 001f 24       		.uleb128 0x24
 503 0020 00       		.byte	0
 504 0021 0B       		.uleb128 0xb
 505 0022 0B       		.uleb128 0xb
 506 0023 3E       		.uleb128 0x3e
 507 0024 0B       		.uleb128 0xb
 508 0025 03       		.uleb128 0x3
 509 0026 08       		.uleb128 0x8
 510 0027 00       		.byte	0
 511 0028 00       		.byte	0
 512 0029 04       		.uleb128 0x4
 513 002a 16       		.uleb128 0x16
 514 002b 00       		.byte	0
 515 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 23


 516 002d 0E       		.uleb128 0xe
 517 002e 3A       		.uleb128 0x3a
 518 002f 0B       		.uleb128 0xb
 519 0030 3B       		.uleb128 0x3b
 520 0031 05       		.uleb128 0x5
 521 0032 49       		.uleb128 0x49
 522 0033 13       		.uleb128 0x13
 523 0034 00       		.byte	0
 524 0035 00       		.byte	0
 525 0036 05       		.uleb128 0x5
 526 0037 35       		.uleb128 0x35
 527 0038 00       		.byte	0
 528 0039 49       		.uleb128 0x49
 529 003a 13       		.uleb128 0x13
 530 003b 00       		.byte	0
 531 003c 00       		.byte	0
 532 003d 06       		.uleb128 0x6
 533 003e 13       		.uleb128 0x13
 534 003f 01       		.byte	0x1
 535 0040 0B       		.uleb128 0xb
 536 0041 0B       		.uleb128 0xb
 537 0042 3A       		.uleb128 0x3a
 538 0043 0B       		.uleb128 0xb
 539 0044 3B       		.uleb128 0x3b
 540 0045 0B       		.uleb128 0xb
 541 0046 01       		.uleb128 0x1
 542 0047 13       		.uleb128 0x13
 543 0048 00       		.byte	0
 544 0049 00       		.byte	0
 545 004a 07       		.uleb128 0x7
 546 004b 0D       		.uleb128 0xd
 547 004c 00       		.byte	0
 548 004d 03       		.uleb128 0x3
 549 004e 0E       		.uleb128 0xe
 550 004f 3A       		.uleb128 0x3a
 551 0050 0B       		.uleb128 0xb
 552 0051 3B       		.uleb128 0x3b
 553 0052 0B       		.uleb128 0xb
 554 0053 49       		.uleb128 0x49
 555 0054 13       		.uleb128 0x13
 556 0055 38       		.uleb128 0x38
 557 0056 0B       		.uleb128 0xb
 558 0057 00       		.byte	0
 559 0058 00       		.byte	0
 560 0059 08       		.uleb128 0x8
 561 005a 16       		.uleb128 0x16
 562 005b 00       		.byte	0
 563 005c 03       		.uleb128 0x3
 564 005d 0E       		.uleb128 0xe
 565 005e 3A       		.uleb128 0x3a
 566 005f 0B       		.uleb128 0xb
 567 0060 3B       		.uleb128 0x3b
 568 0061 0B       		.uleb128 0xb
 569 0062 49       		.uleb128 0x49
 570 0063 13       		.uleb128 0x13
 571 0064 00       		.byte	0
 572 0065 00       		.byte	0
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 24


 573 0066 09       		.uleb128 0x9
 574 0067 0D       		.uleb128 0xd
 575 0068 00       		.byte	0
 576 0069 03       		.uleb128 0x3
 577 006a 08       		.uleb128 0x8
 578 006b 3A       		.uleb128 0x3a
 579 006c 0B       		.uleb128 0xb
 580 006d 3B       		.uleb128 0x3b
 581 006e 0B       		.uleb128 0xb
 582 006f 49       		.uleb128 0x49
 583 0070 13       		.uleb128 0x13
 584 0071 38       		.uleb128 0x38
 585 0072 0B       		.uleb128 0xb
 586 0073 00       		.byte	0
 587 0074 00       		.byte	0
 588 0075 0A       		.uleb128 0xa
 589 0076 01       		.uleb128 0x1
 590 0077 01       		.byte	0x1
 591 0078 49       		.uleb128 0x49
 592 0079 13       		.uleb128 0x13
 593 007a 01       		.uleb128 0x1
 594 007b 13       		.uleb128 0x13
 595 007c 00       		.byte	0
 596 007d 00       		.byte	0
 597 007e 0B       		.uleb128 0xb
 598 007f 21       		.uleb128 0x21
 599 0080 00       		.byte	0
 600 0081 49       		.uleb128 0x49
 601 0082 13       		.uleb128 0x13
 602 0083 2F       		.uleb128 0x2f
 603 0084 0B       		.uleb128 0xb
 604 0085 00       		.byte	0
 605 0086 00       		.byte	0
 606 0087 0C       		.uleb128 0xc
 607 0088 13       		.uleb128 0x13
 608 0089 01       		.byte	0x1
 609 008a 0B       		.uleb128 0xb
 610 008b 0B       		.uleb128 0xb
 611 008c 3A       		.uleb128 0x3a
 612 008d 0B       		.uleb128 0xb
 613 008e 3B       		.uleb128 0x3b
 614 008f 05       		.uleb128 0x5
 615 0090 01       		.uleb128 0x1
 616 0091 13       		.uleb128 0x13
 617 0092 00       		.byte	0
 618 0093 00       		.byte	0
 619 0094 0D       		.uleb128 0xd
 620 0095 0D       		.uleb128 0xd
 621 0096 00       		.byte	0
 622 0097 03       		.uleb128 0x3
 623 0098 0E       		.uleb128 0xe
 624 0099 3A       		.uleb128 0x3a
 625 009a 0B       		.uleb128 0xb
 626 009b 3B       		.uleb128 0x3b
 627 009c 05       		.uleb128 0x5
 628 009d 49       		.uleb128 0x49
 629 009e 13       		.uleb128 0x13
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 25


 630 009f 38       		.uleb128 0x38
 631 00a0 0B       		.uleb128 0xb
 632 00a1 00       		.byte	0
 633 00a2 00       		.byte	0
 634 00a3 0E       		.uleb128 0xe
 635 00a4 2E       		.uleb128 0x2e
 636 00a5 00       		.byte	0
 637 00a6 3F       		.uleb128 0x3f
 638 00a7 19       		.uleb128 0x19
 639 00a8 03       		.uleb128 0x3
 640 00a9 0E       		.uleb128 0xe
 641 00aa 3A       		.uleb128 0x3a
 642 00ab 0B       		.uleb128 0xb
 643 00ac 3B       		.uleb128 0x3b
 644 00ad 0B       		.uleb128 0xb
 645 00ae 27       		.uleb128 0x27
 646 00af 19       		.uleb128 0x19
 647 00b0 11       		.uleb128 0x11
 648 00b1 01       		.uleb128 0x1
 649 00b2 12       		.uleb128 0x12
 650 00b3 06       		.uleb128 0x6
 651 00b4 40       		.uleb128 0x40
 652 00b5 18       		.uleb128 0x18
 653 00b6 9742     		.uleb128 0x2117
 654 00b8 19       		.uleb128 0x19
 655 00b9 00       		.byte	0
 656 00ba 00       		.byte	0
 657 00bb 0F       		.uleb128 0xf
 658 00bc 2E       		.uleb128 0x2e
 659 00bd 00       		.byte	0
 660 00be 3F       		.uleb128 0x3f
 661 00bf 19       		.uleb128 0x19
 662 00c0 03       		.uleb128 0x3
 663 00c1 0E       		.uleb128 0xe
 664 00c2 3A       		.uleb128 0x3a
 665 00c3 0B       		.uleb128 0xb
 666 00c4 3B       		.uleb128 0x3b
 667 00c5 05       		.uleb128 0x5
 668 00c6 27       		.uleb128 0x27
 669 00c7 19       		.uleb128 0x19
 670 00c8 11       		.uleb128 0x11
 671 00c9 01       		.uleb128 0x1
 672 00ca 12       		.uleb128 0x12
 673 00cb 06       		.uleb128 0x6
 674 00cc 40       		.uleb128 0x40
 675 00cd 18       		.uleb128 0x18
 676 00ce 9742     		.uleb128 0x2117
 677 00d0 19       		.uleb128 0x19
 678 00d1 00       		.byte	0
 679 00d2 00       		.byte	0
 680 00d3 10       		.uleb128 0x10
 681 00d4 2E       		.uleb128 0x2e
 682 00d5 00       		.byte	0
 683 00d6 3F       		.uleb128 0x3f
 684 00d7 19       		.uleb128 0x19
 685 00d8 03       		.uleb128 0x3
 686 00d9 0E       		.uleb128 0xe
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 26


 687 00da 3A       		.uleb128 0x3a
 688 00db 0B       		.uleb128 0xb
 689 00dc 3B       		.uleb128 0x3b
 690 00dd 05       		.uleb128 0x5
 691 00de 27       		.uleb128 0x27
 692 00df 19       		.uleb128 0x19
 693 00e0 11       		.uleb128 0x11
 694 00e1 01       		.uleb128 0x1
 695 00e2 12       		.uleb128 0x12
 696 00e3 06       		.uleb128 0x6
 697 00e4 40       		.uleb128 0x40
 698 00e5 18       		.uleb128 0x18
 699 00e6 9642     		.uleb128 0x2116
 700 00e8 19       		.uleb128 0x19
 701 00e9 00       		.byte	0
 702 00ea 00       		.byte	0
 703 00eb 11       		.uleb128 0x11
 704 00ec 34       		.uleb128 0x34
 705 00ed 00       		.byte	0
 706 00ee 03       		.uleb128 0x3
 707 00ef 0E       		.uleb128 0xe
 708 00f0 3A       		.uleb128 0x3a
 709 00f1 0B       		.uleb128 0xb
 710 00f2 3B       		.uleb128 0x3b
 711 00f3 0B       		.uleb128 0xb
 712 00f4 49       		.uleb128 0x49
 713 00f5 13       		.uleb128 0x13
 714 00f6 3F       		.uleb128 0x3f
 715 00f7 19       		.uleb128 0x19
 716 00f8 3C       		.uleb128 0x3c
 717 00f9 19       		.uleb128 0x19
 718 00fa 00       		.byte	0
 719 00fb 00       		.byte	0
 720 00fc 00       		.byte	0
 721              		.section	.debug_aranges,"",%progbits
 722 0000 34000000 		.4byte	0x34
 723 0004 0200     		.2byte	0x2
 724 0006 00000000 		.4byte	.Ldebug_info0
 725 000a 04       		.byte	0x4
 726 000b 00       		.byte	0
 727 000c 0000     		.2byte	0
 728 000e 0000     		.2byte	0
 729 0010 00000000 		.4byte	.LFB0
 730 0014 54000000 		.4byte	.LFE0-.LFB0
 731 0018 00000000 		.4byte	.LFB1
 732 001c 54000000 		.4byte	.LFE1-.LFB1
 733 0020 00000000 		.4byte	.LFB2
 734 0024 0C000000 		.4byte	.LFE2-.LFB2
 735 0028 00000000 		.4byte	.LFB3
 736 002c 0A000000 		.4byte	.LFE3-.LFB3
 737 0030 00000000 		.4byte	0
 738 0034 00000000 		.4byte	0
 739              		.section	.debug_ranges,"",%progbits
 740              	.Ldebug_ranges0:
 741 0000 00000000 		.4byte	.LFB0
 742 0004 54000000 		.4byte	.LFE0
 743 0008 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 27


 744 000c 54000000 		.4byte	.LFE1
 745 0010 00000000 		.4byte	.LFB2
 746 0014 0C000000 		.4byte	.LFE2
 747 0018 00000000 		.4byte	.LFB3
 748 001c 0A000000 		.4byte	.LFE3
 749 0020 00000000 		.4byte	0
 750 0024 00000000 		.4byte	0
 751              		.section	.debug_line,"",%progbits
 752              	.Ldebug_line0:
 753 0000 D1000000 		.section	.debug_str,"MS",%progbits,1
 753      02006800 
 753      00000201 
 753      FB0E0D00 
 753      01010101 
 754              	.LASF32:
 755 0000 55534255 		.ascii	"USBUART_EP_3_ISR\000"
 755      4152545F 
 755      45505F33 
 755      5F495352 
 755      00
 756              	.LASF29:
 757 0011 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 757      4152545F 
 757      7369655F 
 757      65705F73 
 757      74727563 
 758              	.LASF28:
 759 0027 65704372 		.ascii	"epCr0\000"
 759      3000
 760              	.LASF11:
 761 002d 666C6F61 		.ascii	"float\000"
 761      7400
 762              	.LASF3:
 763 0033 73686F72 		.ascii	"short unsigned int\000"
 763      7420756E 
 763      7369676E 
 763      65642069 
 763      6E7400
 764              	.LASF38:
 765 0046 433A5C55 		.ascii	"C:\\Users\\Keshuai\\Documents\\PSoC Creator\\ADC_Si"
 765      73657273 
 765      5C4B6573 
 765      68756169 
 765      5C446F63 
 766 0074 6E676C65 		.ascii	"ngleEndedMode01\\ADC_SingleEndedMode02.cydsn\000"
 766      456E6465 
 766      644D6F64 
 766      6530315C 
 766      4144435F 
 767              	.LASF34:
 768 00a0 55534255 		.ascii	"USBUART_SOF_ISR\000"
 768      4152545F 
 768      534F465F 
 768      49535200 
 769              	.LASF26:
 770 00b0 6570436E 		.ascii	"epCnt0\000"
 770      743000
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 28


 771              	.LASF27:
 772 00b7 6570436E 		.ascii	"epCnt1\000"
 772      743100
 773              	.LASF19:
 774 00be 6570546F 		.ascii	"epToggle\000"
 774      67676C65 
 774      00
 775              	.LASF39:
 776 00c7 55534255 		.ascii	"USBUART_EP\000"
 776      4152545F 
 776      455000
 777              	.LASF14:
 778 00d2 72656738 		.ascii	"reg8\000"
 778      00
 779              	.LASF5:
 780 00d7 6C6F6E67 		.ascii	"long unsigned int\000"
 780      20756E73 
 780      69676E65 
 780      6420696E 
 780      7400
 781              	.LASF20:
 782 00e9 61646472 		.ascii	"addr\000"
 782      00
 783              	.LASF30:
 784 00ee 73696545 		.ascii	"sieEp\000"
 784      7000
 785              	.LASF31:
 786 00f4 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 786      4152545F 
 786      7369655F 
 786      6570735F 
 786      73747275 
 787              	.LASF1:
 788 010b 756E7369 		.ascii	"unsigned char\000"
 788      676E6564 
 788      20636861 
 788      7200
 789              	.LASF37:
 790 0119 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART_episr.c\000"
 790      72617465 
 790      645F536F 
 790      75726365 
 790      5C50536F 
 791              	.LASF36:
 792 0140 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 792      4320342E 
 792      392E3320 
 792      32303135 
 792      30333033 
 793 0173 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 793      20726576 
 793      6973696F 
 793      6E203232 
 793      31323230 
 794 01a6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 794      66756E63 
 794      74696F6E 
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 29


 794      2D736563 
 794      74696F6E 
 795              	.LASF12:
 796 01ce 646F7562 		.ascii	"double\000"
 796      6C6500
 797              	.LASF16:
 798 01d5 61747472 		.ascii	"attrib\000"
 798      696200
 799              	.LASF22:
 800 01dc 62756666 		.ascii	"buffOffset\000"
 800      4F666673 
 800      657400
 801              	.LASF10:
 802 01e7 75696E74 		.ascii	"uint16\000"
 802      313600
 803              	.LASF17:
 804 01ee 61706945 		.ascii	"apiEpState\000"
 804      70537461 
 804      746500
 805              	.LASF8:
 806 01f9 756E7369 		.ascii	"unsigned int\000"
 806      676E6564 
 806      20696E74 
 806      00
 807              	.LASF7:
 808 0206 6C6F6E67 		.ascii	"long long unsigned int\000"
 808      206C6F6E 
 808      6720756E 
 808      7369676E 
 808      65642069 
 809              	.LASF18:
 810 021d 68774570 		.ascii	"hwEpState\000"
 810      53746174 
 810      6500
 811              	.LASF33:
 812 0227 55534255 		.ascii	"USBUART_EP_4_ISR\000"
 812      4152545F 
 812      45505F34 
 812      5F495352 
 812      00
 813              	.LASF15:
 814 0238 73697A65 		.ascii	"sizetype\000"
 814      74797065 
 814      00
 815              	.LASF21:
 816 0241 65704D6F 		.ascii	"epMode\000"
 816      646500
 817              	.LASF6:
 818 0248 6C6F6E67 		.ascii	"long long int\000"
 818      206C6F6E 
 818      6720696E 
 818      7400
 819              	.LASF13:
 820 0256 63686172 		.ascii	"char\000"
 820      00
 821              	.LASF23:
 822 025b 62756666 		.ascii	"bufferSize\000"
ARM GAS  C:\Users\Keshuai\AppData\Local\Temp\ccOGDZDR.s 			page 30


 822      65725369 
 822      7A6500
 823              	.LASF2:
 824 0266 73686F72 		.ascii	"short int\000"
 824      7420696E 
 824      7400
 825              	.LASF35:
 826 0270 55534255 		.ascii	"USBUART_BUS_RESET_ISR\000"
 826      4152545F 
 826      4255535F 
 826      52455345 
 826      545F4953 
 827              	.LASF9:
 828 0286 75696E74 		.ascii	"uint8\000"
 828      3800
 829              	.LASF24:
 830 028c 696E7465 		.ascii	"interface\000"
 830      72666163 
 830      6500
 831              	.LASF4:
 832 0296 6C6F6E67 		.ascii	"long int\000"
 832      20696E74 
 832      00
 833              	.LASF25:
 834 029f 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 834      42554152 
 834      545F4550 
 834      5F43544C 
 834      5F424C4F 
 835              	.LASF0:
 836 02b6 7369676E 		.ascii	"signed char\000"
 836      65642063 
 836      68617200 
 837              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
